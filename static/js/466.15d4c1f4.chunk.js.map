{"version":3,"file":"static/js/466.15d4c1f4.chunk.js","mappings":"4MACA,EAA+B,kCAA/B,EAAiF,mCAAjF,EAA0I,yCAA1I,EAA4M,4C,uCCgF5M,EA3EoB,WAClB,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAC7B,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAuCA,OACE,kBAAMC,SAxBa,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAa,CACjBP,KAAMA,EACNE,OAAQA,GAGYN,EAASY,MAC7B,SAAAC,GAAO,OACLA,EAAQT,KAAKU,gBAAkBH,EAAWP,KAAKU,eAC/CD,EAAQP,SAAWK,EAAWL,MAFzB,IAMPS,MAAM,GAAD,OAAIJ,EAAWP,KAAf,8BAIPN,GAASkB,EAAAA,EAAAA,IAAWL,IACpBN,EAAQ,IACRE,EAAU,IACX,EAG+BU,UAAWC,EAAzC,WACE,mBAAOD,UAAWC,EAAlB,UAAwC,QAEtC,kBACEC,KAAK,OACLf,KAAK,OACLa,UAAWC,EACXE,MAAOhB,EACPiB,UAAQ,EACRC,SA/CkB,SAAAb,GACxBJ,EAAQI,EAAEc,OAAOH,MAClB,QAgDG,mBAAOH,UAAWC,EAAlB,UAAwC,SAC/B,KACP,kBACEC,KAAK,MACLf,KAAK,SACLgB,MAAOd,EACPW,UAAWC,EACXI,SArDwB,SAAAb,GAC9B,IAAIW,EAAQX,EAAEc,OAAOH,MAAMI,QAAQ,MAAO,KAC1CJ,EAAQA,EAAMK,MAAM,cAElBL,EAAQA,EAAMM,KAAK,MAGrBnB,EAAUa,EACX,EA8COC,UAAQ,EACRM,QAAQ,2GAGZ,mBAAQR,KAAK,SAASF,UAAWC,EAAjC,SAAgE,kBAKrE,EC9ED,EAAgC,mCAAhC,EAA2F,2CAA3F,EAAqJ,kCC8CrJ,EAzCoB,WAClB,IAAMpB,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvB0B,GAAS3B,EAAAA,EAAAA,IAAY4B,EAAAA,KAE3BC,EAAAA,EAAAA,YAAU,WACRhC,GAASiC,EAAAA,EAAAA,MACV,GAAE,CAACjC,IAYJ,OACE,eAAImB,UAAWC,EAAf,UAVKlB,EAGoBA,EAAS4B,QAAO,SAAAf,GAAO,OAC9CA,EAAQT,KAAKU,cAAckB,SAASJ,EAAOd,cADG,IAFvC,IAUiBmB,KAAI,SAAApB,GAC1B,OACE,gBAAqBI,UAAWC,EAAhC,UACGL,EAAQT,KAAK,KAAGS,EAAQP,QACzB,mBACEa,KAAK,SACLF,UAAWC,EACXgB,QAAS,WACPpC,GAASqC,EAAAA,EAAAA,IAActB,EAAQuB,IAChC,EALH,SAMC,aARMvB,EAAQuB,GAapB,KAGN,EC5CD,EAA+B,6BAA/B,EAA2E,6B,UC0B3E,EArBe,WACb,IAAMtC,GAAWC,EAAAA,EAAAA,MACXsC,GAAcpC,EAAAA,EAAAA,IAAY4B,EAAAA,IAEhC,OACE,iCACE,eAAIZ,UAAWC,EAAf,SAAoC,2BACpC,kBACEC,KAAK,OACLf,KAAK,SACLkB,SAAU,SAAAb,GAAC,OAAIX,GAASwC,EAAAA,EAAAA,GAAU7B,EAAEc,OAAOH,OAAhC,EACXH,UAAWC,EACXG,UAAQ,EACRD,MAAOiB,EACPV,QAAQ,mOAKf,ECRD,EAbqB,WACnB,OACE,iBAAKV,UAAU,YAAf,WACE,eAAIA,UAAU,gBAAd,SAA8B,eAC9B,SAAC,EAAD,KAEA,eAAIA,UAAU,gBAAd,SAA8B,cAC9B,SAAC,EAAD,KACA,SAAC,EAAD,MAGL,C","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form_contact\":\"ContactForm_form_contact__jMOUN\",\"label_contact\":\"ContactForm_label_contact__RUepy\",\"all_inputs__contact\":\"ContactForm_all_inputs__contact__cWrbg\",\"button_submit__contact\":\"ContactForm_button_submit__contact__Y1a2H\"};","import { useState } from 'react';\nimport styles from './ContactForm.module.css';\nimport { addContact } from 'redux/contacts/contacts.reducer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'redux/selectors';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleinputChange = e => {\n    setName(e.target.value);\n  };\n\n  const handleinputChangeNumber = e => {\n    let value = e.target.value.replace(/\\D/g, '');\n    value = value.match(/.{1,3}/g);\n    if (value) {\n      value = value.join('-');\n    }\n\n    setNumber(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newContact = {\n      name: name,\n      number: number,\n    };\n\n    const contactExists = contacts.some(\n      contact =>\n        contact.name.toLowerCase() === newContact.name.toLowerCase() ||\n        contact.number === newContact.number\n    );\n\n    if (contactExists) {\n      alert(`${newContact.name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(addContact(newContact));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.form_contact}>\n      <label className={styles.label_contact}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          className={styles.all_inputs__contact}\n          value={name}\n          required\n          onChange={handleinputChange}\n        />\n      </label>\n      <label className={styles.label_contact}>\n        Number{' '}\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          className={styles.all_inputs__contact}\n          onChange={handleinputChangeNumber}\n          required\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n        />\n      </label>\n      <button type=\"submit\" className={styles.button_submit__contact}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"list_contacts\":\"ContactList_list_contacts__zCaQw\",\"button_contacts__list\":\"ContactList_button_contacts__list__0naIG\",\"list_element\":\"ContactList_list_element__ox8OW\"};","import React, { useEffect } from 'react';\nimport styles from './ContactList.module.css';\nimport { deleteContact, fetchContact } from 'redux/contacts/contacts.reducer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts, getFilter } from 'redux/selectors';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  useEffect(() => {\n    dispatch(fetchContact());\n  }, [dispatch]);\n\n  const handleFilterContacts = () => {\n    if (!contacts) {\n      return [];\n    }\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n    return filteredContacts;\n  };\n\n  return (\n    <ul className={styles.list_contacts}>\n      {handleFilterContacts().map(contact => {\n        return (\n          <li key={contact.id} className={styles.list_element}>\n            {contact.name}: {contact.number}\n            <button\n              type=\"button\"\n              className={styles.button_contacts__list}\n              onClick={() => {\n                dispatch(deleteContact(contact.id));\n              }}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"title_filter\":\"Filter_title_filter__le8w2\",\"input_filter\":\"Filter_input_filter__o87tO\"};","import React from 'react';\nimport styles from './Filter.module.css';\nimport { setFilter } from 'redux/filter/filter.reducer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from 'redux/selectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(getFilter);\n\n  return (\n    <>\n      <h3 className={styles.title_filter}>Find contacts by name</h3>\n      <input\n        type=\"text\"\n        name=\"number\"\n        onChange={e => dispatch(setFilter(e.target.value))}\n        className={styles.input_filter}\n        required\n        value={filterValue}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\n\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n      />\n    </>\n  );\n};\n\nexport default Filter;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nconst ContactsPage = () => {\n  return (\n    <div className=\"container\">\n      <h1 className=\"hero_contacts\">Phonebook</h1>\n      <ContactForm />\n\n      <h2 className=\"contacts_list\">Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["dispatch","useDispatch","contacts","useSelector","getContacts","useState","name","setName","number","setNumber","onSubmit","e","preventDefault","newContact","some","contact","toLowerCase","alert","addContact","className","styles","type","value","required","onChange","target","replace","match","join","pattern","filter","getFilter","useEffect","fetchContact","includes","map","onClick","deleteContact","id","filterValue","setFilter"],"sourceRoot":""}